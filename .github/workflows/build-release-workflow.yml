name: Build & Release Android APK

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:

env:
  NODE_ENV: production

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18.x"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Generate Android project files
        run: npx expo prebuild --platform android --clean

      - name: Configure Android Gradle Properties
        run: |
          cat <<EOF >> android/gradle.properties
          # Enable or disable Hermes JavaScript engine
          hermesEnabled=true
          # JVM settings
          org.gradle.jvmargs=-Xmx2048m -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8
          # AndroidX migration
          android.useAndroidX=true
          android.enableJetifier=true
          EOF

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "17"

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3
        with:
          api-level: 35
          build-tools: "35.0.0"
          ndk: "27.1.12297006"

      - name: Prepare signing keys
        run: |
          mkdir -p ~/.android
          echo "${{ secrets.ANDROID_KEYSTORE_BASE64 }}" | base64 --decode > ~/.android/upload-keystore.jks
        env:
          ANDROID_KEYSTORE_BASE64: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}

      - name: Create gradle.properties for signing
        run: |
          cat <<EOF > android/gradle.properties
          MYAPP_UPLOAD_STORE_FILE=upload-keystore.jks
          MYAPP_UPLOAD_KEY_ALIAS=${{ secrets.ANDROID_KEY_ALIAS }}
          MYAPP_UPLOAD_STORE_PASSWORD=${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
          MYAPP_UPLOAD_KEY_PASSWORD=${{ secrets.ANDROID_KEY_PASSWORD }}
          EOF

      - name: Build Android release APK
        working-directory: android
        run: ./gradlew assembleRelease --no-daemon --warning-mode all

      - name: Archive APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-release.apk
          path: android/app/build/outputs/apk/release/app-release.apk

  release:
    needs: build-and-release
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Download APK artifact
        uses: actions/download-artifact@v4
        with:
          name: app-release.apk
          path: .

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          body: |
            Automated APK release for tag ${{ github.ref_name }}.
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload APK to Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          files: app-release.apk
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
